{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "metadata": {
                "Description": "Select the name of the deployment"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "defaultValue": "vmadmin",
            "metadata": {
                "Description": "Specify VM Admin user name"
            }
        },
        "navAdminUsername": {
          "type": "string",
          "defaultValue": "admin",
          "metadata": {
            "Description": "Specify NAV Administrator user name"
          }
        },
            "adminPassword": {
            "type": "securestring",
            "metadata": {
                "Description": "Specify VM Admin Password"
            }
        },
        "country": {
          "type": "string",
          "defaultValue": "US",
          "allowedValues": [ "W1", "US", "CA", "GB", "DK" ],
          "metadata": {
            "Description": "Select the Country version to deploy (subject to availability)"
          }
        },
        "navVersion": {
          "type": "string",
          "defaultValue": "devpreview",
          "metadata": {
            "Description": "Select the Version of NAV to deploy. Selecting 'devpreview' gives you the latest public NAV Developer Preview version."
          }
        },
		"LicenseFileUri": {
		  "type": "string",
          "defaultValue": "",
          "metadata": {
          "Description": "Optional: Specify a secure Url of your NAV Partner License File for the developer preview. If you do not specify a license file Url here, you will have to upload the license manually later."
        }
      }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSku": "2016-Datacenter-with-Containers",
        "storageAccountType" : "Standard_LRS",
        "vmStorageAccountContainerName" : "vhds",
        "publicIPAddressName" : "[concat(parameters('vmName'), '_pip')]",
        "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
        "dnsName" : "[tolower(parameters('vmName'))]",
        "vmSize" : "Standard_D2_v2",
        "addressPrefix":"10.0.0.0/16",
        "subnetName" : "Subnet",
        "subnetPrefix" : "10.0.0.0/24",
        "networkSecurityGroupName": "[concat(parameters('vmName'), '_nsg')]",
        "virtualNetworkName" : "VNet",
        "server1Name" : "[tolower(parameters('vmName'))]",
        "nic1Name" : "[concat(parameters('vmName'),'_nic')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "accountid": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', variables('server1Name'))]",
        "ScriptCommandToExecute": "powershell.exe -File  "
    },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsName')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "description": "Http access",
              "protocol": "Tcp",
              "sourcePortRange": "80",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "FILES",
            "properties": {
              "description": "File access",
              "protocol": "Tcp",
              "sourcePortRange": "8080",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "description": "Http access over Secure Socket Layer",
              "protocol": "Tcp",
              "sourcePortRange": "443",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          },
          {
            "name": "Client",
            "properties": {
              "description": "Access for Windows Client",
              "protocol": "Tcp",
              "sourcePortRange": "7046",
              "destinationPortRange": "7046",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          },
          {
            "name": "Soap",
            "properties": {
              "description": "Access to Soap Web Services",
              "protocol": "Tcp",
              "sourcePortRange": "7047",
              "destinationPortRange": "7047",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 400,
              "direction": "Inbound"
            }
          },
          {
            "name": "OData",
            "properties": {
              "description": "Access to OData Services",
              "protocol": "Tcp",
              "sourcePortRange": "7048",
              "destinationPortRange": "7048",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 500,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic1Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('server1Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('server1Name')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('server1Name'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic1Name'))]"
            }
          ]
        }
      },

      "resources": [
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('server1Name'),'/vmextension1')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PowerShellScript2"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('server1Name'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(deployment().properties.templateLink.uri, 'initialize.ps1')]"
          ],
          "commandToExecute": "[concat(variables('ScriptCommandToExecute'),'initialize.ps1',' -TemplateLink \"',deployment().properties.templateLink.uri,'\" -hostName \"\" -VMAdminUsername \"',parameters('vmAdminUsername'),'\" -NAVAdminUsername \"',parameters('navAdminUsername'),'\" -AdminPassword \"',parameters('adminPassword'),'\" -Country \"',parameters('country'),'\" -navVersion \"',parameters('navVersion'),'\" -LicenseFileUri \"',parameters('licenseFileUri'),'\"')]"
        },
        "protectedSettings": {
        }
      }
    }
  ]
}
